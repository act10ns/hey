name: Docker

on:
  push:
    tags:
      - v*

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker Lint
        id: docker-lint
        run: |
          docker run --rm -i ghcr.io/hadolint/hadolint hadolint \
          --ignore DL3008 \
          - < Dockerfile
      - name: Run tests
        id: smoketest
        run: |
          docker build -t hey .
          docker run hey -z 2s https://www.google.com
          docker run hey sh -c '/wait-for www.google.com:443 -- echo ready'
          docker run hey sh -c '/wait-for www.google.com:443 -- hey -z 2s https://www.google.com'

      - uses: act10ns/slack@v1
        with: 
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()

  build:
    name: Build and Push
    needs: test
    runs-on: ubuntu-latest
    env:
      REPOSITORY_URL: ghcr.io
      IMAGE_NAME: ${{ github.repository_owner }}/hey
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Variables
        id: vars
        run: echo "::set-output name=SHORT_COMMIT_ID::$(git rev-parse --short HEAD)"
      - name: Build Image
        id: docker-build
        run: >-
          docker build
          --build-arg VERSION=$(cat VERSION)
          -t $IMAGE_NAME
          -t $REPOSITORY_URL/$IMAGE_NAME:$(cat VERSION)
          -t $REPOSITORY_URL/$IMAGE_NAME:${{ steps.vars.outputs.SHORT_COMMIT_ID }}
          -t $REPOSITORY_URL/$IMAGE_NAME:latest .
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REPOSITORY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Image
        id: docker-push
        run: docker push --all-tags $REPOSITORY_URL/$IMAGE_NAME

      - uses: act10ns/slack@v1
        with: 
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
